{"version":3,"sources":["./src/app/auth/register/register-routing.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEE;;;AAEzD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,CAAC,CAAC;AAM7D,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;ACViD;AACiC;AAC5B;;;;;;;ICO/B,0EAGQ;IAAA,4EACR;IAAA,4DAAM;;;IACN,0EAGQ;IAAA,yFACR;IAAA,4DAAM;;;IASN,0EACI;IAAA,+FACJ;IAAA,4DAAM;;;ADjBvB,MAAM,iBAAiB;IAO5B,YAAoB,OAAoB,EAAU,MAAc;QAA5C,YAAO,GAAP,OAAO,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANhE,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAC3B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC1F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAE;YAClD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC3D,CAAC;IAEkE,CAAC;IAErE,QAAQ;IACR,CAAC;IACK,UAAU;;YACd,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAEnE,IAAG;gBACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC1D,IAAG,IAAI,EAAC;oBACN,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;iBAChC;gBACD,IAAG,QAAQ,KAAK,eAAe,EAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;iBACtC;qBAAI;oBACH,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;iBACzC;aACF;YACD,OAAM,KAAK,EAAC;gBAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;aAAC;QAClC,CAAC;KAAA;IAEO,mBAAmB,CAAC,IAAS;QACnC,IAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;aAAK,IAAG,IAAI,EAAC;YACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;SAC/C;aAAI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAEM,cAAc,CAAC,KAAgB;QACpC,IAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE;YACrE,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kFA5CU,iBAAiB;iGAAjB,iBAAiB,6GAFlB,CAAC,kEAAW,CAAC;QCVzB,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,0EACI;QAD0C,6IAAY,gBAAY,IAAC;QACnE,yEACI;QAAA,2EAAmB;QAAA,gEAAK;QAAA,4DAAQ;QAChC,uEACA;QAAA,+GAGQ;QAER,+GAGQ;QAEZ,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAA6B;QAAA,iFAAqB;QAAA,4DAAQ;QAC1D,wEACA;QAAA,+GACI;QAER,4DAAM;QACN,8EAAiG;QAAA,oEAAQ;QAAA,4DAAS;QACtH,4DAAO;QACP,2EACI;QAAA,qEAAG;QAAA,oFAAwB;QAAA,yEAA6B;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAI;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlCgB,0DAA4B;QAA5B,uFAA4B;QAKtB,0DACqC;QADrC,6JACqC;QAIrC,0DACqC;QADrC,0JACqC;QAWpC,0DAAqC;QAArC,uGAAqC;QAIiB,0DAAiC;QAAjC,8FAAiC;QAGlE,0DAAyB;QAAzB,6IAAyB;;6FDtB9D,iBAAiB;cAN7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;gBACxC,SAAS,EAAC,CAAC,kEAAW,CAAC;aACxB;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEmB;AACT;AACJ;;AAU9C,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBANhB;YACP,4DAAY;YACZ,8EAAqB;YACrB,kEAAmB;SACpB;mIAEU,cAAc,mBAPV,qEAAiB,aAE9B,4DAAY;QACZ,8EAAqB;QACrB,kEAAmB;6FAGV,cAAc;cAR1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAiB,CAAC;gBACjC,OAAO,EAAE;oBACP,4DAAY;oBACZ,8EAAqB;oBACrB,kEAAmB;iBACpB;aACF","file":"auth-register-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{FormGroup, FormControl, Validators, ControlContainer} from '@angular/forms';\nimport {AuthService} from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport {user} from '../../shared/models/user.interface';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  providers:[AuthService]\n})\nexport class RegisterComponent implements OnInit {\n  registerForm = new FormGroup({\n    email: new FormControl('',[Validators.required, Validators.minLength(2),Validators.email]),\n    password: new FormControl('',Validators.required,),\n    confirmPassword: new FormControl('',[Validators.required])\n  })\n  \n  constructor(private authSvc: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  async onRegister(){\n    const {email, password, confirmPassword} = this.registerForm.value;\n    \n    try{\n      const user = await this.authSvc.register(email, password);\n      if(user){\n        this.checkUserIsVerified(user);\n      } \n      if(password === confirmPassword){\n        console.log(\"Contraseñas coinciden\");\n      }else{\n        console.log(\"Contraseñas no coinciden\");\n      }\n    }\n    catch(error){console.log(error)}\n  }\n\n  private checkUserIsVerified(user:user){\n    if(user && user.emailVerified){\n      this.router.navigate(['/home']);\n    }else if(user){\n      this.router.navigate(['/verification-email']);\n    }else{\n      this.router.navigate(['/register']);\n    }\n  }\n  \n  public passwordsMatch(group: FormGroup){\n    if(group.get('password').value === group.get('confirmPassword').value ){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-5\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center\">REGISTER</h1>\n                <form [formGroup] = \"registerForm\" novalidate (ngSubmit)=\"onRegister()\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" >\n                        <div class=\"alert alert-danger\" \n                            *ngIf=\"registerForm.get('email').hasError('required') \n                            && registerForm.get('email').touched\" >\n                                Email requerido\n                        </div>\n                        <div class=\"alert alert-danger\" \n                            *ngIf=\"registerForm.get('email').hasError('email') \n                            && registerForm.get('email').touched\" >\n                                Formato de correo incorrecto\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"confirmPassword\">Confirm your password</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n                        <div *ngIf=\"!passwordsMatch(registerForm)\" class=\"alert alert-danger\">\n                            Las contraseñas no coinciden.\n                        </div>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" [disabled]=\"registerForm.invalid\">Register</button>\n                </form>\n                <div class=\"form-group mt-3\">\n                    <p>Do you have an account? <a [routerLink]=\"['/login']\">Login</a></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}